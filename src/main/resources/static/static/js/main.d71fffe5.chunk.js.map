{"version":3,"sources":["components/project/CreateProjectButton.js","actions/projectActions.js","actions/types.js","components/project/ProjectItem.js","components/Dashboard.js","SecurityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/project/AddProject.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","SecurityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["CreateProjectButton","Fragment","to","className","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullname","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","console","log","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d71fffe5.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => { \n    return (\n        <React.Fragment>\n        <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n      </React.Fragment>\n    );\n};\n\nexport default CreateProjectButton;","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS,GET_PROJECT,DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => \n{\n    try{\n        await axios.post(\"/api/project\",project);\n        history.push(\"/dashboard\");\n        dispatch({\n            type:GET_ERRORS,\n            payload:{}\n        });\n    }\n    catch(err){\n        dispatch({\n            type:GET_ERRORS,\n            payload:err.response.data\n        });\n    };\n};\n\nexport const getProjects = () => async dispatch => {\n    const res = await axios.get(\"/api/project/all\");\n    dispatch({\n        type:GET_PROJECTS,\n        payload:res.data\n    })\n}\n\nexport const getProject = (id,history) => async dispatch => {\n    try{\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n        type:GET_PROJECT,\n        payload:res.data\n    });\n    }catch(error){\n        history.push(\"/dashboard\");\n    }\n};\n\nexport const deleteProject = id => async dispatch => {\n    if(window.confirm(\"Are you sure ? This will delete Project\"\n    )){\n        await axios.delete(`/api/project/${id}`);\n        dispatch({\n           type:DELETE_PROJECT,\n           payload:id\n    });\n\n    }\n    \n}","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types of Backlog Actions\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n\n    onDeleteClick = id => {\n        this.props.deleteProject(id);\n    }\n\n    render() {\n        const { project } = this.props;\n\n        return (\n            <div className=\"container\">\n            <div className=\"card card-body bg-light mb-3\">\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <span className=\"mx-auto\">{ project.projectIdentifier }</span>\n                    </div>\n                    <div className=\"col-lg-6 col-md-4 col-8\">\n                        <h3>{ project.projectName }</h3>\n                        <p>{ project.description } </p>\n                    </div>\n                    <div className=\"col-md-4 d-none d-lg-block\">\n                        <ul className=\"list-group\">\n                            <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                                <li className=\"list-group-item board\">\n                                    <i className=\"fa fa-flag-checkered pr-1\">Project Board </i>\n                                </li>\n                            </Link>\n                            <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                <li className=\"list-group-item update\">\n                                    <i className=\"fa fa-edit pr-1\">Update Project Info</i>\n                                </li>\n                            </Link>\n                            \n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(\n                                    this,project.projectIdentifier\n                                )} >\n                                    <i className=\"fa fa-minus-circle pr-1\">Delete Project</i>\n                                </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n       \n\n        )\n    }\n}\n\nProjectItem.propTypes = {\n    deleteProject: PropTypes.func.isRequired,    \n}\n\nexport default connect(null,{deleteProject}) (ProjectItem);","import React, { Component } from 'react';\nimport CreateProjectButton from './project/CreateProjectButton';\nimport ProjectItem from './project/ProjectItem';\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n\n    componentDidMount(){\n        this.props.getProjects();\n    }\n\n\n    render() {\n        const {projects} = this.props.project;\n\n        return (\n            <div className=\"projects\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <h1 className=\"display-4 text-center\">Projects</h1>\n                        <br />\n                        <CreateProjectButton />\n                        <br />\n                        <hr />\n    \n                        {projects.map(project=> (\n                            <ProjectItem key={project.id} project= {project} />\n                        )) }\n                       \n                    </div>\n                </div>\n            </div>\n        </div>\n    \n        );\n    }\n}\n\nDashboard.propTypes = {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    project:state.project,\n}) \n\nexport default connect(mapStateToProps,{getProjects}) (Dashboard);","import axios from \"axios\";\n\nconst setJWTToken = token => {\n    if(token){\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    }else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n}\n\nexport default setJWTToken;","import axios from \"axios\";\nimport setJWTToken from \"../SecurityUtils/setJWTToken\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n \n    try{\n        await axios.post(\"/api/users/register\",newUser);\n        history.push(\"/login\");\n        dispatch({\n            type:GET_ERRORS,\n            payload:{}\n        });\n    }catch(err){\n        dispatch({\n            type:GET_ERRORS,\n            payload:err.response.data\n        });\n    }\n\n} \n\nexport const login = LoginRequest => async dispatch => {\n    try {\n     \n    //post => Login Request\n    const res = await axios.post(\"/api/users/login\",LoginRequest); \n    //extract token from res.data\n    const { token } = res.data;\n    // store token in localstorage\n    localStorage.setItem(\"jwtToken\",token);\n    //set our token in header ***\n    setJWTToken(token);\n    // decode the token on react\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded\n    });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n    \n}\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setJWTToken(false);\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: {}\n    });\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n\n    logout(){\n        this.props.logout();\n        window.location.href=\"/\";\n    }\n\n    render() {\n        const { validToken , user} = this.props.security;\n\n        const userIsAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/dashboard\">\n                        Dashboard\n                    </Link>\n                </li>\n            </ul>\n\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link \" to=\"/dashboard\">\n                    <i className=\"fas fa-user-circle mr-1\" />   \n                    {user.fullname}\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\n                        Logout\n                    </Link>\n                </li>\n            </ul>\n        </div>\n        );\n\n        const userIsNotAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link \" to=\"/register\">\n                        Sign Up\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/login\">\n                        Login\n                    </Link>\n                </li>\n            </ul>\n        </div>\n        );\n\n        let headerLinks;\n\n        if(validToken && user){\n            headerLinks= userIsAuthenticated;\n        }else{\n            headerLinks = userIsNotAuthenticated;\n        }\n\n        return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n    <div className=\"container\">\n        <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n        </Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n            <span className=\"navbar-toggler-icon\" />\n        </button>\n\n        {headerLinks}\n    </div>\n</nav>\n\n        )\n    }\n}\n\nHeader.propTypes = {\n    logout: PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security\n})\n\nexport default connect(mapStateToProps,{logout}) (Header);","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\n\nclass AddProject extends Component {\n\n    constructor(){\n        super();\n\n        this.state = { \n            projectName:\"\",\n            projectIdentifier:\"\",\n            description:\"\",\n            start_date:\"\",\n            end_date:\"\",\n            errors:{}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n\n    //life cycle hooks\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({ errors:nextProps.errors});\n        }\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value });\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newProject = {\n            projectName:this.state.projectName,\n            projectIdentifier:this.state.projectIdentifier,\n            description:this.state.description,\n            start_date:this.state.start_date,\n            end_date:this.state.end_date\n        }\n        console.log(newProject);\n        this.props.createProject(newProject,this.props.history);\n    }\n\n    render() {\n        const {errors} = this.state;\n\n        return (\n            <div>\n            <div className=\"register\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <h5 className=\"display-4 text-center\">Create Project form</h5>\n                        <hr />\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <input type=\"text\" \n                                className={classnames(\"form-control form-control-lg\",\n                                {\"is-invalid\":errors.projectName })} \n                                placeholder=\"Project Name\" \n                                name=\"projectName\"\n                                value={this.state.projectName} \n                                onChange={this.onChange} />\n                                \n                                {errors.projectName && (\n                                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                )}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <input type=\"text\" \n                                className={classnames(\"form-control form-control-lg\",\n                                {\"is-invalid\":errors.projectIdentifier })} \n                                placeholder=\"Unique Project ID\" \n                                name=\"projectIdentifier\" \n                                value={ this.state.projectIdentifier}\n                                onChange={this.onChange} />\n                                \n                                {errors.projectIdentifier && (\n                                    <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\n                                )}\n\n                            </div>\n                    \n                            <div className=\"form-group\">\n                                <textarea \n                                className={classnames(\"form-control form-control-lg\",\n                                {\"is-invalid\":errors.description })} \n                                placeholder=\"Project Description\" \n                                name=\"description\"\n                                value={this.state.description } \n                                onChange={this.onChange}></textarea>\n                                \n                                {errors.description && (\n                                    <div className=\"invalid-feedback\">{errors.description}</div>\n                                )}\n                            </div>\n                            <h6>Start Date</h6>\n                            <div className=\"form-group\">\n                                <input type=\"date\" className=\"form-control form-control-lg\" \n                                name=\"start_date\"\n                                value={ this.state.start_date}\n                                onChange={this.onChange} />\n                            </div>\n                            <h6>Estimated End Date</h6>\n                            <div className=\"form-group\">\n                                <input type=\"date\" className=\"form-control form-control-lg\" name=\"end_date\"\n                                value={this.state.end_date} \n                                onChange={this.onChange}/>\n                            </div>\n    \n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n            </div>\n        )\n    }\n}\n\nAddProject.propTypes = {\n    createProject : PropTypes.func.isRequired,\n    errors : PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    errors : state.errors\n})\n\nexport default connect(mapStateToProps,\n    {createProject }\n    )(AddProject);\n\n","import { GET_BACKLOG,GET_PROJECT_TASK,DELETE_PROJECT_TASK } from \"../actions/types\";\n\nconst initialState = {\n    project_tasks: [],\n    project_task: {}\n}\n\nexport default function(state=initialState,action){\n    switch(action.type){\n\n        case GET_BACKLOG:\n        return {\n            ...state,\n            project_tasks:action.payload\n        }\n\n        case GET_PROJECT_TASK:\n        return {\n            ...state,\n            project_task:action.payload\n        }\n\n        case DELETE_PROJECT_TASK:\n        return{\n            ...state,\n            project_tasks: state.project_tasks.filter(\n                project_task=> project_task.projectSequence !== action.payload)\n        }\n\n        default:\n        return state;\n    }\n}","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {} ;\n\nexport default function(state=initialState,action){\n    switch(action.type){\n        case GET_ERRORS:\n        return action.payload;\n\n\n        default:\n        return state;\n    }\n}\n","import { DELETE_PROJECT, GET_PROJECT, GET_PROJECTS } from \"../actions/types\";\n\nconst initialState = {\n    projects:[],\n    project: {}\n};\n\nexport default function(state=initialState,action){\n    switch(action.type){\n        case GET_PROJECTS:\n        return {\n            ...state,\n            projects:action.payload\n        };\n\n        case GET_PROJECT:\n        return {\n            ...state,\n            project:action.payload\n        };\n\n        case DELETE_PROJECT:\n        return {\n            ...state,\n            projects: state.projects.filter(\n                project => project.projectIdentifier !== action.payload \n            )\n        };\n\n        default:\n            return state;\n    };\n\n}","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n    validToken:false,\n    user: {}\n}\n\nconst booleanActionPayload = (payload) =>{\n    if(payload){\n        return true;\n    } else{\n        return false;\n    }\n\n}\n\nexport default function(state = initialState,action ){\n    switch(action.type){\n\n        case SET_CURRENT_USER:\n        return {\n            ...state,\n            validToken: booleanActionPayload(action.payload),\n            user: action.payload\n        }\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\nimport backlogReducer from \"./backlogReducer\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers ({ \n    errors: errorReducer,\n    project: projectReducer,\n    backlog: backlogReducer,\n    security: securityReducer,\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools = \n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif(window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools){\n    store = createStore(rootReducer,initialState,compose(applyMiddleware(...middleware),\n    ReactReduxDevTools));\n}\nelse{\n    store = createStore(rootReducer,initialState,compose(applyMiddleware(...middleware)));\n\n}\n\nexport default store;","import React, { Component } from 'react';\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\n\nclass UpdateProject extends Component {\n\n    //set state\n    constructor(){\n        super();\n\n        this.state = {\n            id:\"\",\n            projectName:\"\",\n            projectIdentifier:\"\",\n            description:\"\",\n            start_date:\"\",\n            end_date:\"\",\n            errors:{}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps){\n\n        if(nextProps.errors){\n            this.setState({ errors: nextProps.errors });\n        }\n\n        const {\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        } = nextProps.project;\n\n        this.setState({\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        })\n    }\n\n    componentDidMount(){\n        const { id } = this.props.match.params;\n        this.props.getProject(id,this.props.history);\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]:e.target.value});\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n\n        const updateProject = {\n            id:this.state.id,\n            projectName:this.state.projectName,\n            projectIdentifier:this.state.projectIdentifier,\n            description:this.state.description,\n            start_date:this.state.start_date,\n            end_date:this.state.end_date\n        };\n\n        this.props.createProject(updateProject,this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\n                            <hr />\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" \n                                    className={classnames(\"form-control form-control-lg\",{\n                                        \"is-invalid\":errors.projectName\n                                    })} \n                                    placeholder=\"Project Name\" \n                                    name=\"projectName\"\n                                    value={this.state.projectName}\n                                    onChange={this.onChange} />\n                                    {\n                                        errors.projectName && (\n                                            <div className=\"invalid-feedback\">{ errors.projectName }</div>\n                                        )\n                                    }\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" \n                                    className=\"form-control form-control-lg\" \n                                    placeholder=\"Unique Project ID\"\n                                    name=\"projectIdentifier\"\n                                    value={this.state.projectIdentifier}\n                                    onChange={this.onChange}\n                                        disabled />\n                                </div>\n                \n                                <div className=\"form-group\">\n                                    <textarea className={classnames(\"form-control form-control-lg\",{\n                                        \"is-invalid\":errors.description\n                                    })}  \n                                    placeholder=\"Project Description\"\n                                    name=\"description\" \n                                    value={this.state.description}\n                                    onChange={this.onChange}></textarea>\n                                    {\n                                        errors.description && (\n                                            <div className=\"invalid-feedback\">{ errors.description }</div>\n                                        )\n                                    }\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" \n                                    className=\"form-control form-control-lg\" \n                                    name=\"start_date\" \n                                    value={this.state.start_date}\n                                    onChange={this.onChange} />\n                                </div>\n                                <h6>Estimated End Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" \n                                    className=\"form-control form-control-lg\" \n                                    name=\"end_date\" \n                                    value={this.state.end_date}\n                                    onChange={this.onChange} />\n                                </div>\n        \n                                <input type=\"submit\" \n                                className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        \n        )\n    }\n}\n\nUpdateProject.propTypes = {\n    getProject: PropTypes.func.isRequired,\n    createProject: PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired \n}; \n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps,{getProject,createProject}) (UpdateProject);","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; \n\nclass ProjectTask extends Component {\n\n    onDeleteClick(backlog_id,pt_id){\n        this.props.deleteProjectTask(backlog_id,pt_id); \n    }\n\n    render() {\n\n     const { project_task } = this.props;\n     let priorityString;\n     let priorityClass;\n\n     if(project_task.priority===1){\n         priorityClass = \"bg-danger text-light\";\n         priorityString= \"HIGH\";\n     }\n     if(project_task.priority===2){\n        priorityClass = \"bg-warning text-light\";\n        priorityString= \"MEDIUM\";\n    }\n    if(project_task.priority===3){\n        priorityClass = \"bg-info text-light\";\n        priorityString= \"LOW\";\n    }\n\n    return (\n            \n            \n    <div className=\"card mb-1 bg-light\">\n\n    <div className={`card-header text-primary ${priorityClass}`}>\n\n    ID: {project_task.projectSequence} -- Priority:  {priorityString}\n    \n    </div>\n     \n    <div className=\"card-body bg-light\">\n        <h5 className=\"card-title\">{ project_task.summary }</h5>\n        <p className=\"card-text text-truncate \">\n            { project_task.acceptanceCriteria }\n        </p>\n        <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\n            View / Update\n        </Link>\n\n        <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(\n            this,\n            project_task.projectIdentifier,\n            project_task.projectSequence\n        )}>\n            Delete\n        </button>\n    </div>\n        \n</div>\n        )\n    }\n}\n\nProjectTask.propTypes = {\n    deleteProjectTask: PropTypes.func.isRequired\n}\n\nexport default connect(null,{deleteProjectTask}) (ProjectTask);\n\n","import axios from \"axios\";\nimport { GET_ERRORS ,GET_BACKLOG , GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"./types\";\n\nexport const addProjectTask = (backlog_id,project_task,history) => async dispatch => {\n\n    try{\n\n    await axios.post(`/api/backlog/${backlog_id}`,project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n        type:GET_ERRORS,\n        payload:{}\n    });\n    }\n    catch(err){\n        dispatch({\n            type:GET_ERRORS,\n            payload:err.response.data\n        });\n    }\n    \n}\n\nexport const getBacklog = backlog_id => async dispatch => {\n\n    try{\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\n        dispatch({\n            type:GET_BACKLOG,\n            payload:res.data\n        });\n\n    }catch(err){\n        dispatch({\n            type:GET_ERRORS,\n            payload:err.response.data\n        });\n    }\n}\n\nexport const getProjectTask = (backlog_id,pt_id,history) => async dispatch => {\n\n    try{\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n        dispatch({\n            type: GET_PROJECT_TASK,\n            payload: res.data\n        })\n    }catch(err){\n        history.push(\"/dashboard\");\n    }\n}\n\nexport const updateProjectTask = (backlog_id , pt_id, project_task,history) => async dispatch => {\n\n    try{\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`,project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type:GET_ERRORS,\n            payload:{}\n        });\n    }catch(err){\n        dispatch({\n            type:GET_ERRORS,\n            payload:err.response.data\n        });\n    }\n}\n\nexport const deleteProjectTask = (backlog_id,pt_id) => async dispatch => {\n    if(window.confirm(`You are deleting task ${pt_id}`)){\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n        dispatch({\n            type:DELETE_PROJECT_TASK,\n            payload:pt_id\n        });\n    }\n}\n","import React, { Component } from 'react';\nimport ProjectTask from './ProjectTasks/ProjectTask';\n\n\nclass Backlog extends Component {\n    render() {\n\n        const { project_tasks_prop } = this.props;\n\n\n        const tasks = project_tasks_prop.map(project_task => (\n            <ProjectTask key={project_task.id} project_task={project_task} />\n        ));\n\n        let todoItems = [];\n        let inProgressItems=[];\n        let doneItems=[];\n\n        for (let i=0; i < tasks.length;i++){\n\n            if(tasks[i].props.project_task.status === \"TO_DO\"){\n                todoItems.push(tasks[i]);\n            }\n            if(tasks[i].props.project_task.status === \"IN_PROGRESS\"){\n                inProgressItems.push(tasks[i]);\n            }\n            if(tasks[i].props.project_task.status === \"DONE\"){\n                doneItems.push(tasks[i]);\n            }   \n        }\n\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <div className=\"card text-center mb-2\">\n                        <div className=\"card-header bg-secondary text-white\">\n                            <h3>TO DO</h3>\n                        </div>\n                    </div>\n                    {todoItems}\n                    \n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"card text-center mb-2\">\n                        <div className=\"card-header bg-primary text-white\">\n                            <h3>In Progress</h3>\n                        </div>\n                    </div>\n                {inProgressItems}\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"card text-center mb-2\">\n                        <div className=\"card-header bg-success text-white\">\n                            <h3>Done</h3>\n                        </div>\n                    </div>\n                    {doneItems}\n                </div>\n                \n            </div>\n        </div>\n        )\n    }\n}\n\nexport default Backlog;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Backlog from './Backlog';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n\n   //constructor to handle errors\n   constructor(){\n       super();\n       this.state = {\n           errors:{}\n       };\n   }\n\n   componentDidMount(){\n       const { id }= this.props.match.params;\n       this.props.getBacklog(id);\n   }\n\n   componentWillReceiveProps(nextProps){\n       if(nextProps.errors){\n           this.setState({errors: nextProps.errors });\n       }\n   }\n\n    render() {\n\n        const { id }= this.props.match.params;\n        const { project_tasks } = this.props.backlog;\n        const { errors } = this.state;\n        \n        let BoardContent;\n\n        const boardAlgorithm = (errors, project_tasks) => {\n            if(project_tasks.length < 1){\n                if(errors.projectNotFound){\n                    return (\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\n                        {errors.projectNotFound} \n                        </div>\n                    );\n                } else if(errors.projectIdentifier){\n                    return (\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\n                        {errors.projectIdentifier} \n                        </div>\n                    );\n                }\n                else {\n                   return (<div className=\"alert alert-info text-center\" role=\"alert\">\n                    No Project Tasks on this board\n                    </div>\n                   );\n                }\n            } else {\n                return <Backlog project_tasks_prop={ project_tasks } />;\n            }\n        }\n\n        BoardContent = boardAlgorithm(errors,project_tasks);\n\n        return ( \n            <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n            <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n\n    </div>\n\n     )\n    }\n}\n\nProjectBoard.propTypes = {\n    backlog: PropTypes.object.isRequired,\n    getBacklog: PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    backlog: state.backlog,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps,\n    { getBacklog })\n    (ProjectBoard);","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n\n    constructor(props){\n        super(props);\n        const { id } = this.props.match.params;\n\n        this.state = {\n            summary:\"\",\n            acceptanceCriteria:\"\",\n            status:\"\",\n            priority:0,\n            dueDate:\"\",\n            projectIdentifier: id,\n            errors: {}\n        };\n        this.onChange= this.onChange.bind(this);\n        this.onSubmit= this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({ errors: nextProps.errors});\n        }\n    }\n   \n\n    //onchange\n    onChange(e){\n        this.setState({[e.target.name]:e.target.value})\n    }\n\n    //onSubmit\n    onSubmit(e){\n        e.preventDefault();\n\n        const newTask = {\n            summary:this.state.summary,\n            acceptanceCriteria:this.state.acceptanceCriteria,\n            status:this.state.status,\n            priority:this.state.priority,\n            dueDate:this.state.dueDate\n        };\n        this.props.addProjectTask(\n            this.state.projectIdentifier,newTask,this.props.history);\n    }\n\n\n    render() {\n\n        const { id }= this.props.match.params;\n        const { errors } = this.state;\n\n        return (\n            <div className=\"add-PBI\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                            Back to Project Board\n                        </Link>\n                        <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                        <p className=\"lead text-center\">Project Name + Project Code</p>\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <input type=\"text\" \n                                className={classnames(\"form-control form-control-lg\",{\n                                    \"is-invalid\":errors.summary\n                                })} \n                                name=\"summary\" placeholder=\"Project Task summary\"\n                                value={this.state.summary} \n                                onChange={this.onChange}/>\n\n                                {errors.summary && (\n                                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                                )}\n                            </div>\n                            <div className=\"form-group\">\n                                <textarea className=\"form-control form-control-lg\" \n                                placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\"\n                                value={this.state.acceptanceCriteria}\n                                onChange={this.onChange}></textarea>\n                            </div>\n                            <h6>Due Date</h6>\n                            <div className=\"form-group\">\n                                <input type=\"date\" className=\"form-control form-control-lg\" \n                                name=\"dueDate\" value={this.state.dueDate}\n                                onChange={this.onChange} />\n                            </div>\n                            <div className=\"form-group\">\n                                <select className=\"form-control form-control-lg\"\n                                 name=\"priority\"\n                                 value={this.state.priority} onChange={this.onChange}>\n                                    <option value={0}>Select Priority</option>\n                                    <option value={1}>High</option>\n                                    <option value={2}>Medium</option>\n                                    <option value={3}>Low</option>\n                                </select>\n                            </div>\n    \n                            <div className=\"form-group\">\n                                <select className=\"form-control form-control-lg\" \n                                name=\"status\"\n                                value={this.state.status} onChange={this.onChange}>\n                                    <option value=\"\">Select Status</option>\n                                    <option value=\"TO_DO\">TO DO</option>\n                                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                    <option value=\"DONE\">DONE</option>\n                                </select>\n                            </div>\n    \n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>    \n                )\n    }\n}\n\nAddProjectTask.propTypes = {\n    addProjectTask:PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    errors:state.errors\n});\n\nexport default connect(mapStateToProps,{addProjectTask})(AddProjectTask);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogActions\";\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n\n   constructor(){\n       super();\n\n       this.state = {\n           id: \"\",\n           projectSequence:\"\",\n           summary:\"\",\n           acceptanceCriteria:\"\",\n           status:\"\",\n           priority:\"\",\n           dueDate:\"\",\n           projectIdentifier:\"\",\n           create_At:\"\",\n           errors:{}\n       };\n       this.onChange = this.onChange.bind(this);\n       this.onSubmit = this.onSubmit.bind(this);\n   }\n\n   componentDidMount(){\n       const { backlog_id , pt_id } = this.props.match.params;\n       this.props.getProjectTask(backlog_id,pt_id,this.props.history);\n   }\n\n   componentWillReceiveProps(nextProps){\n\n    if(nextProps.errors){\n        this.setState({ errors: nextProps.errors});\n    }\n\n    const {\n           id,\n           projectSequence,\n           summary,\n           acceptanceCriteria,\n           status,\n           priority,\n           dueDate,\n           projectIdentifier,\n           create_At\n    } = nextProps.project_task;\n\n    this.setState({\n           id,\n           projectSequence,\n           summary,\n           acceptanceCriteria,\n           status,\n           priority,\n           dueDate,\n           projectIdentifier,\n           create_At\n    });\n   }\n\n   onChange(e){\n       this.setState({ [e.target.name]:e.target.value});\n   }\n\n   onSubmit(e){\n       e.preventDefault();\n\n       const UpdateProjectTask = {\n        id:this.state.id,\n        projectSequence:this.state.projectSequence,\n        summary:this.state.summary,\n        acceptanceCriteria:this.state.acceptanceCriteria,\n        status:this.state.status,\n        priority:this.state.priority,\n        dueDate:this.state.dueDate,\n        projectIdentifier:this.state.projectIdentifier,\n        create_At:this.state.create_At\n       };\n\n       this.props.updateProjectTask(this.state.projectIdentifier,this.state.projectSequence,\n        UpdateProjectTask,this.props.history);\n   }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"add-PBI\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\n                            Back to Project Board\n                        </Link>\n                        <h4 className=\"display-4 text-center\">Update Project Task</h4>\n                        <p className=\"lead text-center\">Project Name {this.state.projectIdentifier} |\n                         Project Task Id { this.state.projectSequence}{\" \"} </p>\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\n                                    \"is-invalid\":errors.summary\n                                })}\n                                 name=\"summary\" placeholder=\"Project Task summary\"\n                                 value={this.state.summary} \n                                 onChange={this.onChange} />\n                                 {errors.summary && (\n                                     <div className=\"invalid-feedback\"> { errors.summary}</div>\n                                 )}\n                            </div>\n                            <div className=\"form-group\">\n                                <textarea className=\"form-control form-control-lg\" \n                                placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\"\n                                value={this.state.acceptanceCriteria}\n                                onChange={this.onChange}></textarea>\n                            </div>\n                            <h6>Due Date</h6>\n                            <div className=\"form-group\">\n                                <input type=\"date\" className=\"form-control form-control-lg\" \n                                name=\"dueDate\" \n                                value={this.state.dueDate}\n                                onChange={this.onChange}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <select className=\"form-control form-control-lg\"\n                                 name=\"priority\"\n                                 value={this.state.priority}\n                                 onChange={this.onChange}>\n                                    <option value={0}>Select Priority</option>\n                                    <option value={1}>High</option>\n                                    <option value={2}>Medium</option>\n                                    <option value={3}>Low</option>\n                                </select>\n                            </div>\n    \n                            <div className=\"form-group\">\n                                <select className=\"form-control form-control-lg\" \n                                name=\"status\" value={this.state.status}\n                                onChange={this.onChange}>\n                                    <option value=\"\">Select Status</option>\n                                    <option value=\"TO_DO\">TO DO</option>\n                                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                    <option value=\"DONE\">DONE</option>\n                                </select>\n                            </div>\n    \n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n        )\n    }\n}\n\nUpdateProjectTask.propTypes = {\n    getProjectTask: PropTypes.func.isRequired,\n    project_task: PropTypes.object.isRequired,\n    updateProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    project_task: state.backlog.project_task,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps,{getProjectTask,updateProjectTask})(UpdateProjectTask);","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport {connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n\n    componentDidMount(){\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    } \n\n    render() {\n        return (\n            <div className=\"landing\">\n            <div className=\"light-overlay landing-inner text-dark\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 text-center\">\n                            <h1 className=\"display-3 mb-4\">Personal Kanban Tool</h1>\n                            <p className=\"lead\">\n                                Create your account to join active projects or start your own\n                            </p>\n                            <hr />\n                            <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                                Sign Up\n                            </Link>\n                            <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                                Login\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>    \n        );\n    }\n}\n\nLanding.propTypes = {\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security\n})\n\nexport default connect(mapStateToProps) (Landing);","import React, { Component } from 'react';\nimport { createNewUser } from \"../../actions/securityActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n    constructor(){\n        super();\n\n        this.state = {\n            username: \"\",\n            fullname: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount(){\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    } \n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            fullname: this.state.fullname,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        };\n        this.props.createNewUser(newUser,this.props.history);\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]:e.target.value});\n    }\n\n    render() {\n        const { errors }= this.state;\n\n        return (\n            <div className=\"register\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <h1 className=\"display-4 text-center\">Sign Up</h1>\n                        <p className=\"lead text-center\">Create your Account</p>\n                        <form onSubmit={ this.onSubmit}>\n                            <div className=\"form-group\">\n                                <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\n                                    \"is-invalid\": errors.fullname\n                                })} \n                                placeholder=\"FullName\" \n                                name=\"fullname\"\n                                value={this.state.fullname} \n                                onChange={this.onChange} />\n                                {\n                                    errors.fullname && (\n                                        <div className=\"invalid-feedback\"> {errors.fullname}</div>\n                                    )\n                                }\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\n                                    \"is-invalid\": errors.username\n                                })} \n                                placeholder=\"Email Address (User Name)\"\n                                 name=\"username\" \n                                 value={this.state.username} \n                                 onChange={this.onChange} />\n                                 {\n                                    errors.username && (\n                                        <div className=\"invalid-feedback\"> {errors.username}</div>\n                                    )\n                                }\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" className={classnames(\"form-control form-control-lg\",{\n                                    \"is-invalid\": errors.password\n                                })} \n                                placeholder=\"Password\" name=\"password\"\n                                value={this.state.password} \n                                onChange={this.onChange} />\n                                {\n                                    errors.password && (\n                                        <div className=\"invalid-feedback\"> {errors.password}</div>\n                                    )\n                                }\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" className={classnames(\"form-control form-control-lg\",{\n                                    \"is-invalid\": errors.confirmPassword\n                                })} \n                                placeholder=\"Confirm Password\"\n                                name=\"confirmPassword\"\n                                value={this.state.confirmPassword}\n                                onChange={this.onChange} />\n                                {\n                                    errors.confirmPassword && (\n                                        <div className=\"invalid-feedback\"> {errors.confirmPassword}</div>\n                                    )\n                                }\n                            </div>\n                            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    createNewUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security : PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    security: state.security\n});\n\nexport default connect(mapStateToProps,{createNewUser}) (Register);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport {connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\"; \n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            \"username\":\"\",\n            \"password\":\"\",\n            errors: {}\n        }; \n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount(){\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n        if(nextProps.errors){\n            this.setState({ errors : nextProps.errors});\n        }\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const LoginRequest = {\n            username : this.state.username,\n            password: this.state.password\n        };\n        this.props.login(LoginRequest);\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]:e.target.value}); \n    }\n\n    render() {\n        \n        const { errors } = this.state;\n        return (\n            <div className=\"login\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                    <h1 className=\"display-4 text-center\">Log In</h1>\n                    <form onSubmit={this.onSubmit} >\n                        <div className=\"form-group\">\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\n                                \"is-invalid\": errors.username\n                            })} \n                            placeholder=\"Email Address\" \n                            name=\"username\" \n                            value={this.state.username}\n                            onChange={this.onChange} />\n                            {\n                                errors.username && (\n                                    <div className=\"invalid-feedback\"> {errors.username}</div>\n                                )\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"password\" \n                            className={classnames(\"form-control form-control-lg\",{\n                                \"is-invalid\": errors.password\n                            })}  \n                            placeholder=\"Password\" \n                            name=\"password\" \n                            value={this.state.password}\n                            onChange={this.onChange} />\n                            {\n                                errors.password && (\n                                    <div className=\"invalid-feedback\"> {errors.password}</div>\n                                )\n                            }\n                        </div> \n                        <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    login : PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps,{login})(Login);","import React from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component,security, ...otherProps }) => (\n\n    <Route           \n    {...otherProps } \n    render = {props =>\n     security.validToken === true ? (\n         <Component { ...props } />\n     ) : (\n         <Redirect to=\"/login\" />\n     ) \n     }\n     />\n);\n\nSecuredRoute.propTypes = {\n    security : PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security :state.security\n});\n\nexport default connect(mapStateToProps) (SecuredRoute);","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Layout/Header';\nimport { BrowserRouter as Router, Route,Switch } from \"react-router-dom\"\nimport AddProject from './components/project/AddProject';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\"\nimport UpdateProject from './components/project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./SecurityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./SecurityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\nif(jwtToken){\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now()/1000;\n  if(decoded_jwtToken.exp < currentTime){\n    store.dispatch(logout());\n    window.location.href = \"/\";\n    //handle logout\n    //window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <Router>\n    <div className=\"App\">\n      <Header />\n      {\n       // public routes\n      }\n\n      <Route exact path=\"/\" component={Landing} />\n      <Route exact path=\"/register\" component={Register} />\n      <Route exact path=\"/login\" component={Login} />\n\n      {\n        // private routes\n      }\n      <Switch>\n      <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n      <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n      <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n      <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n      <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask}/>\n      <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask}/>\n      </Switch>\n     </div>\n\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}